// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package helpers

import (
	"github.com/wednesday-solutions/go-boiler/gqlgen/helper"
	"github.com/wednesday-solutions/go-boiler/models"
)

var CommentPreloadMap = map[string]helper.ColumnSetting{
	"post": helper.ColumnSetting{
		Name:        models.CommentRels.Post,
		IDAvailable: true,
	},
	"post.comments": helper.ColumnSetting{
		Name:        models.CommentRels.Post + "." + models.PostRels.Comments,
		IDAvailable: false,
	},
	"post.user": helper.ColumnSetting{
		Name:        models.CommentRels.Post + "." + models.PostRels.User,
		IDAvailable: false,
	},
	"user": helper.ColumnSetting{
		Name:        models.CommentRels.User,
		IDAvailable: true,
	},
	"user.comments": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"user.company": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"user.company.locations": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Company + "." + models.CompanyRels.Locations,
		IDAvailable: false,
	},
	"user.company.users": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Company + "." + models.CompanyRels.Users,
		IDAvailable: false,
	},
	"user.followeeFollowers": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"user.followerFollowers": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"user.location": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"user.posts": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"user.posts.comments": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Posts + "." + models.PostRels.Comments,
		IDAvailable: false,
	},
	"user.posts.user": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Posts + "." + models.PostRels.User,
		IDAvailable: false,
	},
	"user.role": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Role,
		IDAvailable: false,
	},
	"user.role.users": helper.ColumnSetting{
		Name:        models.CommentRels.User + "." + models.UserRels.Role + "." + models.RoleRels.Users,
		IDAvailable: false,
	},
}

var CommentPayloadPreloadLevels = struct {
	Comment string
}{
	Comment: "comment",
}

var CompanyPreloadMap = map[string]helper.ColumnSetting{
	"locations": helper.ColumnSetting{
		Name:        models.CompanyRels.Locations,
		IDAvailable: false,
	},
	"locations.company": helper.ColumnSetting{
		Name:        models.CompanyRels.Locations + "." + models.LocationRels.Company,
		IDAvailable: false,
	},
	"locations.users": helper.ColumnSetting{
		Name:        models.CompanyRels.Locations + "." + models.LocationRels.Users,
		IDAvailable: false,
	},
	"users": helper.ColumnSetting{
		Name:        models.CompanyRels.Users,
		IDAvailable: false,
	},
	"users.comments": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"users.company": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"users.followeeFollowers": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"users.followerFollowers": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"users.location": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"users.posts": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"users.role": helper.ColumnSetting{
		Name:        models.CompanyRels.Users + "." + models.UserRels.Role,
		IDAvailable: false,
	},
}

var CompanyPayloadPreloadLevels = struct {
	Company string
}{
	Company: "company",
}

var FollowerPreloadMap = map[string]helper.ColumnSetting{
	"followee": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee,
		IDAvailable: true,
	},
	"followee.comments": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"followee.company": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"followee.followeeFollowers": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"followee.followerFollowers": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"followee.location": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"followee.posts": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"followee.role": helper.ColumnSetting{
		Name:        models.FollowerRels.Followee + "." + models.UserRels.Role,
		IDAvailable: false,
	},
	"follower": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower,
		IDAvailable: true,
	},
	"follower.comments": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"follower.company": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"follower.company.locations": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Company + "." + models.CompanyRels.Locations,
		IDAvailable: false,
	},
	"follower.company.users": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Company + "." + models.CompanyRels.Users,
		IDAvailable: false,
	},
	"follower.followeeFollowers": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"follower.followerFollowers": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"follower.followerFollowers.followee": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.FollowerFollowers + "." + models.FollowerRels.Followee,
		IDAvailable: false,
	},
	"follower.followerFollowers.follower": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.FollowerFollowers + "." + models.FollowerRels.Follower,
		IDAvailable: false,
	},
	"follower.location": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"follower.location.company": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Location + "." + models.LocationRels.Company,
		IDAvailable: false,
	},
	"follower.location.users": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Location + "." + models.LocationRels.Users,
		IDAvailable: false,
	},
	"follower.posts": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"follower.posts.comments": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Posts + "." + models.PostRels.Comments,
		IDAvailable: false,
	},
	"follower.posts.user": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Posts + "." + models.PostRels.User,
		IDAvailable: false,
	},
	"follower.role": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Role,
		IDAvailable: false,
	},
	"follower.role.users": helper.ColumnSetting{
		Name:        models.FollowerRels.Follower + "." + models.UserRels.Role + "." + models.RoleRels.Users,
		IDAvailable: false,
	},
}

var FollowerPayloadPreloadLevels = struct {
	Follower string
}{
	Follower: "follower",
}

var LocationPreloadMap = map[string]helper.ColumnSetting{
	"company": helper.ColumnSetting{
		Name:        models.LocationRels.Company,
		IDAvailable: true,
	},
	"company.locations": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Locations,
		IDAvailable: false,
	},
	"company.locations.company": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Locations + "." + models.LocationRels.Company,
		IDAvailable: false,
	},
	"company.locations.users": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Locations + "." + models.LocationRels.Users,
		IDAvailable: false,
	},
	"company.users": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users,
		IDAvailable: false,
	},
	"company.users.comments": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"company.users.company": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"company.users.followeeFollowers": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"company.users.followerFollowers": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"company.users.location": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"company.users.posts": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"company.users.role": helper.ColumnSetting{
		Name:        models.LocationRels.Company + "." + models.CompanyRels.Users + "." + models.UserRels.Role,
		IDAvailable: false,
	},
	"users": helper.ColumnSetting{
		Name:        models.LocationRels.Users,
		IDAvailable: false,
	},
	"users.comments": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"users.comments.post": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Comments + "." + models.CommentRels.Post,
		IDAvailable: false,
	},
	"users.comments.user": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Comments + "." + models.CommentRels.User,
		IDAvailable: false,
	},
	"users.company": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"users.followeeFollowers": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"users.followeeFollowers.followee": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.FolloweeFollowers + "." + models.FollowerRels.Followee,
		IDAvailable: false,
	},
	"users.followeeFollowers.follower": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.FolloweeFollowers + "." + models.FollowerRels.Follower,
		IDAvailable: false,
	},
	"users.followerFollowers": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"users.location": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"users.location.company": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Location + "." + models.LocationRels.Company,
		IDAvailable: false,
	},
	"users.location.users": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Location + "." + models.LocationRels.Users,
		IDAvailable: false,
	},
	"users.posts": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"users.role": helper.ColumnSetting{
		Name:        models.LocationRels.Users + "." + models.UserRels.Role,
		IDAvailable: false,
	},
}

var LocationPayloadPreloadLevels = struct {
	Location string
}{
	Location: "location",
}

var PostPreloadMap = map[string]helper.ColumnSetting{
	"comments": helper.ColumnSetting{
		Name:        models.PostRels.Comments,
		IDAvailable: false,
	},
	"comments.post": helper.ColumnSetting{
		Name:        models.PostRels.Comments + "." + models.CommentRels.Post,
		IDAvailable: false,
	},
	"comments.user": helper.ColumnSetting{
		Name:        models.PostRels.Comments + "." + models.CommentRels.User,
		IDAvailable: false,
	},
	"user": helper.ColumnSetting{
		Name:        models.PostRels.User,
		IDAvailable: true,
	},
	"user.comments": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"user.company": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"user.followeeFollowers": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"user.followerFollowers": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"user.followerFollowers.followee": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.FollowerFollowers + "." + models.FollowerRels.Followee,
		IDAvailable: false,
	},
	"user.followerFollowers.follower": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.FollowerFollowers + "." + models.FollowerRels.Follower,
		IDAvailable: false,
	},
	"user.location": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"user.posts": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"user.posts.comments": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Posts + "." + models.PostRels.Comments,
		IDAvailable: false,
	},
	"user.posts.user": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Posts + "." + models.PostRels.User,
		IDAvailable: false,
	},
	"user.role": helper.ColumnSetting{
		Name:        models.PostRels.User + "." + models.UserRels.Role,
		IDAvailable: false,
	},
}

var PostPayloadPreloadLevels = struct {
	Post string
}{
	Post: "post",
}

var RolePreloadMap = map[string]helper.ColumnSetting{
	"users": helper.ColumnSetting{
		Name:        models.RoleRels.Users,
		IDAvailable: false,
	},
	"users.comments": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"users.comments.post": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Comments + "." + models.CommentRels.Post,
		IDAvailable: false,
	},
	"users.comments.user": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Comments + "." + models.CommentRels.User,
		IDAvailable: false,
	},
	"users.company": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"users.followeeFollowers": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"users.followeeFollowers.followee": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.FolloweeFollowers + "." + models.FollowerRels.Followee,
		IDAvailable: false,
	},
	"users.followeeFollowers.follower": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.FolloweeFollowers + "." + models.FollowerRels.Follower,
		IDAvailable: false,
	},
	"users.followerFollowers": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"users.location": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"users.posts": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"users.role": helper.ColumnSetting{
		Name:        models.RoleRels.Users + "." + models.UserRels.Role,
		IDAvailable: false,
	},
}

var RolePayloadPreloadLevels = struct {
	Role string
}{
	Role: "role",
}

var UserPreloadMap = map[string]helper.ColumnSetting{
	"comments": helper.ColumnSetting{
		Name:        models.UserRels.Comments,
		IDAvailable: false,
	},
	"comments.post": helper.ColumnSetting{
		Name:        models.UserRels.Comments + "." + models.CommentRels.Post,
		IDAvailable: false,
	},
	"comments.user": helper.ColumnSetting{
		Name:        models.UserRels.Comments + "." + models.CommentRels.User,
		IDAvailable: false,
	},
	"company": helper.ColumnSetting{
		Name:        models.UserRels.Company,
		IDAvailable: true,
	},
	"company.locations": helper.ColumnSetting{
		Name:        models.UserRels.Company + "." + models.CompanyRels.Locations,
		IDAvailable: false,
	},
	"company.users": helper.ColumnSetting{
		Name:        models.UserRels.Company + "." + models.CompanyRels.Users,
		IDAvailable: false,
	},
	"followeeFollowers": helper.ColumnSetting{
		Name:        models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"followeeFollowers.followee": helper.ColumnSetting{
		Name:        models.UserRels.FolloweeFollowers + "." + models.FollowerRels.Followee,
		IDAvailable: false,
	},
	"followeeFollowers.follower": helper.ColumnSetting{
		Name:        models.UserRels.FolloweeFollowers + "." + models.FollowerRels.Follower,
		IDAvailable: false,
	},
	"followerFollowers": helper.ColumnSetting{
		Name:        models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"followerFollowers.followee": helper.ColumnSetting{
		Name:        models.UserRels.FollowerFollowers + "." + models.FollowerRels.Followee,
		IDAvailable: false,
	},
	"followerFollowers.follower": helper.ColumnSetting{
		Name:        models.UserRels.FollowerFollowers + "." + models.FollowerRels.Follower,
		IDAvailable: false,
	},
	"location": helper.ColumnSetting{
		Name:        models.UserRels.Location,
		IDAvailable: true,
	},
	"location.company": helper.ColumnSetting{
		Name:        models.UserRels.Location + "." + models.LocationRels.Company,
		IDAvailable: false,
	},
	"location.users": helper.ColumnSetting{
		Name:        models.UserRels.Location + "." + models.LocationRels.Users,
		IDAvailable: false,
	},
	"posts": helper.ColumnSetting{
		Name:        models.UserRels.Posts,
		IDAvailable: false,
	},
	"posts.comments": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.Comments,
		IDAvailable: false,
	},
	"posts.user": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User,
		IDAvailable: false,
	},
	"posts.user.comments": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.Comments,
		IDAvailable: false,
	},
	"posts.user.company": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.Company,
		IDAvailable: false,
	},
	"posts.user.followeeFollowers": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.FolloweeFollowers,
		IDAvailable: false,
	},
	"posts.user.followerFollowers": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.FollowerFollowers,
		IDAvailable: false,
	},
	"posts.user.location": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.Location,
		IDAvailable: false,
	},
	"posts.user.posts": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.Posts,
		IDAvailable: false,
	},
	"posts.user.role": helper.ColumnSetting{
		Name:        models.UserRels.Posts + "." + models.PostRels.User + "." + models.UserRels.Role,
		IDAvailable: false,
	},
	"role": helper.ColumnSetting{
		Name:        models.UserRels.Role,
		IDAvailable: true,
	},
	"role.users": helper.ColumnSetting{
		Name:        models.UserRels.Role + "." + models.RoleRels.Users,
		IDAvailable: false,
	},
}

var UserPayloadPreloadLevels = struct {
	User string
}{
	User: "user",
}
