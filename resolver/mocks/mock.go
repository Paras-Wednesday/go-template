// Code generated by MockGen. DO NOT EDIT.
// Source: resolver.go
//
// Generated by this command:
//
//	mockgen -source=resolver.go -destination=./mocks/mock.go PostDAO
//

// Package mock_resolver is a generated GoMock package.
package mock_resolver

import (
	model "go-template/post-model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPostDAO is a mock of PostDAO interface.
type MockPostDAO struct {
	ctrl     *gomock.Controller
	recorder *MockPostDAOMockRecorder
}

// MockPostDAOMockRecorder is the mock recorder for MockPostDAO.
type MockPostDAOMockRecorder struct {
	mock *MockPostDAO
}

// NewMockPostDAO creates a new mock instance.
func NewMockPostDAO(ctrl *gomock.Controller) *MockPostDAO {
	mock := &MockPostDAO{ctrl: ctrl}
	mock.recorder = &MockPostDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostDAO) EXPECT() *MockPostDAOMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockPostDAO) CreatePost(post model.PostModel) (model.PostModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", post)
	ret0, _ := ret[0].(model.PostModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockPostDAOMockRecorder) CreatePost(post any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockPostDAO)(nil).CreatePost), post)
}

// GetPost mocks base method.
func (m *MockPostDAO) GetPost(id int) (model.PostModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPost", id)
	ret0, _ := ret[0].(model.PostModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPost indicates an expected call of GetPost.
func (mr *MockPostDAOMockRecorder) GetPost(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPost", reflect.TypeOf((*MockPostDAO)(nil).GetPost), id)
}
